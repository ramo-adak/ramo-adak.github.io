{"version":3,"sources":["static/logo.png","components/NewsCard.js","components/News.js","App.js","index.js"],"names":["module","exports","toSnippet","content","maxLength","length","substring","getHeader","readableDate","relativeDate","sourceName","title","className","icon","faClock","href","getTitle","link","target","rel","getImage","imgLink","src","alt","React","memo","props","isOnlyText","articleDate","Date","dateTime","toString","moment","format","fromNow","onClick","window","open","description","GET_ARTICLES","gql","News","useQuery","loading","error","data","fetchMore","articles","edges","map","x","node","toArticles","article","key","id","articleSummary","articleUrl","pubDateTime","imageUrl","pageInfo","hasNextPage","variables","cursor","endCursor","loadMore","undefined","faChevronDown","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","relayStylePagination","App","logo","updateLocale","localization","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c0768c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9ba658e3.png\";","import React from 'react';\nimport moment from 'moment'\nimport {faClock} from '@fortawesome/free-regular-svg-icons'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction toSnippet(content, maxLength) {\n    return content.length >= maxLength\n        ? content.substring(0, maxLength - 3) + \"...\"\n        : content;\n}\n\nfunction NewsCard(props) {\n\n    const isOnlyText = !props.imgLink ;\n    const articleDate = new Date(props.dateTime).toString();\n    const readableDate = moment(new Date(articleDate)).format('LLLL');\n    const relativeDate = moment(new Date(articleDate)).fromNow();\n    return (\n        <div\n            onClick={() => window.open(props.link, '_blank')}\n            className=\"clickable news-card-flex shadowed\">\n            <div className=\"news-card-column alternative\">\n\n                {getImage(props.imgLink)}\n                {getTitle(props.title, props.link)}\n                <div className=\"content-snippet\">{toSnippet(props.description, (isOnlyText? 250 : 100))}</div>\n                {getHeader(readableDate, relativeDate, props.sourceName)}\n            </div>\n            \n            <div className=\"news-card-row main\">\n                <div className=\"news-content\">\n                    {getHeader(readableDate, relativeDate, props.sourceName)}\n                    {getTitle(props.title, props.link)}\n                    <div className=\"content-snippet\">{toSnippet(props.description, (isOnlyText? 500 : 250))}</div>\n                </div>\n                {getImage(props.imgLink)}\n            </div>\n        </div>\n    )\n}\n\nfunction getHeader(readableDate, relativeDate, sourceName) {\n\n    return (\n        <div title={readableDate} className=\"article-header\">\n            <span><FontAwesomeIcon icon={faClock}/> {relativeDate}</span>\n            <span>-</span>\n            <span className=\"source-header\" href=\"#\">@{sourceName}</span>\n        </div>\n    )\n}\n\nfunction getTitle(title, link) {\n    return (\n        <div className=\"article-title\">\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\n        </div>\n    )\n}\n\nfunction getImage(imgLink) {\n    if (imgLink) {\n        return (\n            <div className=\"news-img-container\">\n                <img className=\"news-img\" src={imgLink} alt=\"placeHolder\"></img>\n            </div>\n        )\n    } else {\n        return;\n    }\n}\n\nexport default React.memo(NewsCard)","import React from 'react';\nimport NewsCard from './NewsCard'\nimport './News.scss'\n\nimport {faChevronDown} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport { useQuery, gql } from '@apollo/client';\n\nconst GET_ARTICLES = gql`query Articles($cursor: String) {articles(first: 10, after: $cursor) {\n    edges {\n      node {\n        id, pubDateTime, title, sourceName, \n        articleUrl,  articleSummary, imageUrl\n      }\n      cursor\n    } \n    pageInfo {startCursor, endCursor, hasNextPage}\n    totalCount\n  }}`;\n\nfunction toArticles(articles) {\n    return articles?.edges?.map( x=> x.node) || [];\n}\nfunction hasNextPage(articles) {\n    return articles?.pageInfo?.hasNextPage;\n}\n\nfunction News() {\n\n    const { loading, error, data, fetchMore } = useQuery(GET_ARTICLES);\n\n    function loadMore () {\n        fetchMore({\n            variables: {\n              cursor: data?.articles?.pageInfo?.endCursor\n            }\n        });\n    }\n\n    return (\n        <div className=\"news-flex\">\n            \n        \n            {loading ? (<h2>Loading ...</h2>) : error ?(<h2>Failed to load ...</h2>) : toArticles(data.articles).map((article) =>\n                (\n                    <NewsCard\n                        key={article.id}\n                        title={article.title}\n                        description={article.articleSummary}\n                        link={article.articleUrl}\n                        sourceName={article.sourceName}\n                        dateTime={article.pubDateTime}\n                        imgLink={article.imageUrl}\n                    />\n                )\n            )}\n\n            <div className=\"load-more clickable\" onClick={() => hasNextPage(data.articles) ? loadMore() : undefined}>\n                <FontAwesomeIcon icon={faChevronDown}/></div>\n        </div>\n\n    )\n}\n\nexport default News\n\n","import React from 'react';\nimport News from './components/News'\n\nimport './App.scss'\nimport logo from './static/logo.png';\n\nimport {ApolloProvider} from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { relayStylePagination } from \"@apollo/client/utilities\";\n\n\n// init apollo client\nconst client = new ApolloClient({\n  uri: 'https://api.akhbar-live.com/v1/graphql',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          articles: relayStylePagination([]),\n        },\n      },\n    },\n  })\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <div>\n                <img className=\"logo\" src={logo} alt=\"Logo\"/>\n                <News/>\n            </div>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport moment from \"moment\"\nimport localization from 'moment/locale/ar-dz';\n\n\nmoment.updateLocale('ar-dz', localization);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}