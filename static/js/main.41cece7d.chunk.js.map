{"version":3,"sources":["components/NewsCard.js","components/News.js","App.js","index.js"],"names":["toSnippet","content","maxLength","length","substring","openInNewTab","url","event","newWindow","window","open","opener","stopPropagation","getTitle","title","link","className","href","onClick","e","target","rel","getImage","imgLink","src","alt","referrerPolicy","React","memo","props","sourceTitle","sourceUrl","isOnlyText","articleDate","Date","dateTime","toString","readableDate","moment","format","relativeDate","fromNow","description","icon","faNewspaper","getSourceTitleWithTime","faClock","getTimeDiv","GET_ARTICLES","gql","News","useQuery","loading","error","data","fetchMore","articles","edges","map","x","node","toArticles","article","key","id","articleSummary","articleUrl","pubDateTime","imageUrl","pageInfo","hasNextPage","variables","cursor","endCursor","loadMore","undefined","faSyncAlt","spin","faExclamation","faChevronDown","client","ApolloClient","uri","process","cache","InMemoryCache","typePolicies","Query","fields","relayStylePagination","App","updateLocale","localization","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41cece7d.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport { faClock, faNewspaper} from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction toSnippet(content, maxLength) {\n    return content.length >= maxLength\n        ? content.substring(0, maxLength - 3) + \"...\"\n        : content;\n}\n\nconst openInNewTab = (url, event) => {\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n    if (newWindow) newWindow.opener = null\n    if (event) event.stopPropagation();\n}\n\nfunction NewsCard(props) {\n    const isOnlyText = !props.imgLink;\n    const articleDate = new Date(props.dateTime).toString();\n    const readableDate = moment(new Date(articleDate)).format('LLLL');\n    const relativeDate = moment(new Date(articleDate)).fromNow();\n    return (\n        <div\n\n            onClick={() => openInNewTab(props.link)}\n            className=\"clickable news-card-flex shadowed\">\n            <div className=\"news-card-column alternative\">\n\n                {getImage(props.imgLink, props.title)}\n                {getTitle(props.title, props.link)}\n                <div className=\"content-snippet\">{toSnippet(props.description, (isOnlyText ? 250 : 100))}</div>\n                {getSourceTitleWithTime(props.sourceTitle, props.sourceUrl, readableDate, relativeDate )}\n                \n            </div>\n\n            <div className=\"news-card-row main\">\n                <div className=\"news-content\">\n                    {getTitle(props.title, props.link)}\n                    {getTimeDiv(readableDate, relativeDate)}\n                    <div className=\"content-snippet\">{toSnippet(props.description, (isOnlyText ? 400 : 200))}</div>\n                    {getSourceTitle(props.sourceTitle, props.sourceUrl)}\n\n                </div>\n                {getImage(props.imgLink, props.title)}\n            </div>\n        </div>\n    )\n}\n\nfunction getSourceTitleWithTime(sourceTitle, sourceUrl, readableDate, relativeDate) {\n\n    return (\n        <div  className=\"article-footer\">\n            <FontAwesomeIcon icon={faNewspaper} /> \n            <span className=\"source\" onClick={(event) => openInNewTab(sourceUrl, event)}>{sourceTitle}</span>\n            <span>-</span>\n            <span title={readableDate}> {relativeDate}</span>\n        </div>\n    )\n}\nfunction getSourceTitle(sourceTitle, sourceUrl) {\n\n    return (\n        <div className=\"article-footer\">\n            <FontAwesomeIcon  icon={faNewspaper} />\n            <a className=\"source\" href={sourceUrl} onClick={(e) => e.stopPropagation()} target=\"_blank\" rel=\"noreferrer noopener\">\n                {sourceTitle}\n            </a>\n        </div>\n    )\n}\nfunction getTimeDiv(readableDate, relativeDate) {\n\n    return (\n        <div title={readableDate} className=\"article-header\">\n            <span><FontAwesomeIcon icon={faClock} /> {relativeDate}</span>\n        </div>\n    )\n}\n\nfunction getTitle(title, link) {\n\n    return (\n        <div className=\"article-title\">\n            <a href={link} onClick={(e) => e.stopPropagation()} target=\"_blank\" rel=\"noreferrer noopener\">\n                {title}\n            </a>\n        </div>\n    )\n}\n\nfunction getImage(imgLink, title) {\n    if (imgLink) {\n        return (\n            <div className=\"news-img-container\">\n                <img className=\"news-img\" src={imgLink} alt={title} referrerPolicy=\"no-referrer\" />\n            </div>\n        )\n    } else {\n        return;\n    }\n}\n\nexport default React.memo(NewsCard)\n","import React from 'react';\nimport NewsCard from './NewsCard'\nimport './News.scss'\n\nimport {faChevronDown, faSyncAlt, faExclamation} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport { useQuery, gql } from '@apollo/client';\n\nconst GET_ARTICLES = gql`query Articles($cursor: String) {articles(first: 10, after: $cursor) {\n    edges {\n      node {\n        id, pubDateTime, title, sourceTitle, sourceUrl,\n        articleUrl,  articleSummary, imageUrl\n      }\n      cursor\n    } \n    pageInfo {startCursor, endCursor, hasNextPage}\n    totalCount\n  }}`;\n\nfunction toArticles(articles) {\n    return articles?.edges?.map( x=> x.node) || [];\n}\nfunction hasNextPage(articles) {\n    return articles?.pageInfo?.hasNextPage;\n}\n\nfunction News() {\n\n    const { loading, error, data, fetchMore } = useQuery(GET_ARTICLES);\n    \n    function loadMore () {\n        fetchMore({\n            variables: {\n              cursor: data?.articles?.pageInfo?.endCursor\n            }\n        });\n    }\n    \n    return (\n        \n        <div className=\"news-flex\">\n            {toArticles(data?.articles).map((article) =>\n                (\n                    <NewsCard\n                        key={article.id}\n                        title={article.title}\n                        description={article.articleSummary}\n                        link={article.articleUrl}\n                        sourceTitle={article.sourceTitle}\n                        sourceUrl={article.sourceUrl}\n                        dateTime={article.pubDateTime}\n                        imgLink={article.imageUrl}\n                    />\n                )\n            )}\n\n            <div className={\"load-more clickable \" + (error ? \"red\": \"\")} \n                onClick={() => hasNextPage(data?.articles) && !loading ? loadMore() : undefined}>\n                {loading ? (<FontAwesomeIcon icon={faSyncAlt} spin/>)\n                 : error ?  (<FontAwesomeIcon  icon={faExclamation}/>)\n                 :(<FontAwesomeIcon icon={faChevronDown} />)\n                }\n            </div>\n        </div>\n\n    )\n}\n\nexport default News\n\n","import React from 'react';\nimport News from './components/News'\n\nimport './App.scss'\n\nimport {ApolloProvider} from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { relayStylePagination } from \"@apollo/client/utilities\";\n\n\n// init apollo client\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_URL,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          articles: relayStylePagination([]),\n        },\n      },\n    },\n  })\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <div>\n                <img className=\"logo\" src={process.env.PUBLIC_URL + 'logo.png'} alt=\"Logo\"/>\n                <News/>\n            </div>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport moment from \"moment\"\nimport localization from 'moment/locale/ar-dz';\n\n\nmoment.updateLocale('ar-dz', localization);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}